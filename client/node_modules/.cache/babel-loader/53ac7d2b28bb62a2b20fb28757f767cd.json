{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useContext } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { UserContext } from './UserContext';\nexport default function useAuth() {\n  _s();\n\n  const navigate = useNavigate();\n  const {\n    setAuthUser\n  } = useContext(UserContext);\n  const [error, setError] = useState(null);\n\n  const setUserContext = () => {\n    const auth = JSON.parse(localStorage.getItem('auth'));\n\n    if (auth) {\n      setAuthUser(auth.user);\n      navigate('../');\n    }\n  }; // login\n\n\n  const login = (username, password) => {\n    setError(null);\n    axios.post(`http://localhost:8080/login`, {\n      username: username,\n      password: password\n    }).then(res => {\n      if (res.data.token) {\n        localStorage.setItem(\"auth\", JSON.stringify(res.data));\n        setUserContext();\n      }\n\n      return res.data;\n    }).catch(err => {\n      setError(err.response.data.message);\n    });\n  }; // logout\n\n\n  const logout = () => {\n    localStorage.removeItem('auth');\n    setAuthUser(null);\n    navigate('/');\n  }; // register user\n\n\n  const registerUser = async data => {\n    const {\n      name,\n      address,\n      username,\n      email,\n      password\n    } = data;\n    return axios.post('http://localhost:8080/register', {\n      name,\n      address,\n      username,\n      email,\n      password\n    }).then(res => {\n      setUserContext();\n    }).catch(err => {\n      setError(err.response.data.message);\n    });\n  };\n\n  return {\n    login,\n    logout,\n    registerUser,\n    error\n  };\n}\n\n_s(useAuth, \"LwUt2A55hwgvk49+bVe2MDeAteE=\", false, function () {\n  return [useNavigate];\n});","map":{"version":3,"sources":["C:/Users/mufas/OneDrive/Documents/GitHub/project-rack-race/client/src/hooks/useAuth.js"],"names":["useState","useContext","useNavigate","axios","UserContext","useAuth","navigate","setAuthUser","error","setError","setUserContext","auth","JSON","parse","localStorage","getItem","user","login","username","password","post","then","res","data","token","setItem","stringify","catch","err","response","message","logout","removeItem","registerUser","name","address","email"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,UAAnB,QAAqC,OAArC;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,eAA5B;AAEA,eAAe,SAASC,OAAT,GAAmB;AAAA;;AAChC,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AACA,QAAM;AAAEK,IAAAA;AAAF,MAAkBN,UAAU,CAACG,WAAD,CAAlC;AACA,QAAM,CAACI,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,IAAD,CAAlC;;AAEA,QAAMU,cAAc,GAAG,MAAM;AAC3B,UAAMC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAb;;AACA,QAAIJ,IAAJ,EAAU;AACRJ,MAAAA,WAAW,CAACI,IAAI,CAACK,IAAN,CAAX;AACAV,MAAAA,QAAQ,CAAC,KAAD,CAAR;AACD;AACF,GAND,CALgC,CAahC;;;AACA,QAAMW,KAAK,GAAG,CAACC,QAAD,EAAWC,QAAX,KAAwB;AACpCV,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACAN,IAAAA,KAAK,CAACiB,IAAN,CAAY,6BAAZ,EAA0C;AACxCF,MAAAA,QAAQ,EAAEA,QAD8B;AAExCC,MAAAA,QAAQ,EAAEA;AAF8B,KAA1C,EAICE,IAJD,CAIOC,GAAD,IAAS;AACb,UAAIA,GAAG,CAACC,IAAJ,CAASC,KAAb,EAAoB;AAClBV,QAAAA,YAAY,CAACW,OAAb,CAAqB,MAArB,EAA6Bb,IAAI,CAACc,SAAL,CAAeJ,GAAG,CAACC,IAAnB,CAA7B;AACAb,QAAAA,cAAc;AACf;;AACD,aAAOY,GAAG,CAACC,IAAX;AACD,KAVD,EAWCI,KAXD,CAWQC,GAAD,IAAS;AACdnB,MAAAA,QAAQ,CAACmB,GAAG,CAACC,QAAJ,CAAaN,IAAb,CAAkBO,OAAnB,CAAR;AACD,KAbD;AAcD,GAhBD,CAdgC,CAgChC;;;AACA,QAAMC,MAAM,GAAG,MAAM;AACnBjB,IAAAA,YAAY,CAACkB,UAAb,CAAwB,MAAxB;AACAzB,IAAAA,WAAW,CAAC,IAAD,CAAX;AACAD,IAAAA,QAAQ,CAAC,GAAD,CAAR;AACD,GAJD,CAjCgC,CAuChC;;;AACA,QAAM2B,YAAY,GAAG,MAAOV,IAAP,IAAgB;AACnC,UAAM;AAAEW,MAAAA,IAAF;AAAQC,MAAAA,OAAR;AAAiBjB,MAAAA,QAAjB;AAA2BkB,MAAAA,KAA3B;AAAkCjB,MAAAA;AAAlC,QAA+CI,IAArD;AACA,WAAOpB,KAAK,CAACiB,IAAN,CAAW,gCAAX,EAA6C;AAClDc,MAAAA,IADkD;AAC5CC,MAAAA,OAD4C;AACnCjB,MAAAA,QADmC;AACzBkB,MAAAA,KADyB;AAClBjB,MAAAA;AADkB,KAA7C,EAGNE,IAHM,CAGDC,GAAG,IAAI;AACXZ,MAAAA,cAAc;AACf,KALM,EAMNiB,KANM,CAMAC,GAAG,IAAI;AACZnB,MAAAA,QAAQ,CAACmB,GAAG,CAACC,QAAJ,CAAaN,IAAb,CAAkBO,OAAnB,CAAR;AACD,KARM,CAAP;AASD,GAXD;;AAaA,SAAO;AACLb,IAAAA,KADK;AAELc,IAAAA,MAFK;AAGLE,IAAAA,YAHK;AAILzB,IAAAA;AAJK,GAAP;AAMD;;GA3DuBH,O;UACLH,W","sourcesContent":["import { useState, useContext } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { UserContext } from './UserContext';\r\n\r\nexport default function useAuth() {\r\n  const navigate = useNavigate();\r\n  const { setAuthUser } = useContext(UserContext);\r\n  const [error, setError] = useState(null);\r\n\r\n  const setUserContext = () => {\r\n    const auth = JSON.parse(localStorage.getItem('auth'));\r\n    if (auth) {\r\n      setAuthUser(auth.user);\r\n      navigate('../');\r\n    }\r\n  }\r\n\r\n  // login\r\n  const login = (username, password) => {\r\n    setError(null);\r\n    axios.post(`http://localhost:8080/login`, {\r\n      username: username,\r\n      password: password\r\n    })\r\n    .then((res) => {\r\n      if (res.data.token) {\r\n        localStorage.setItem(\"auth\", JSON.stringify(res.data));\r\n        setUserContext();\r\n      }\r\n      return res.data;\r\n    })\r\n    .catch((err) => {\r\n      setError(err.response.data.message);\r\n    });\r\n  }\r\n\r\n  // logout\r\n  const logout = () => {\r\n    localStorage.removeItem('auth');\r\n    setAuthUser(null);\r\n    navigate('/');\r\n  }\r\n\r\n  // register user\r\n  const registerUser = async (data) => {\r\n    const { name, address, username, email, password } = data;\r\n    return axios.post('http://localhost:8080/register', {\r\n      name, address, username, email, password\r\n    })\r\n    .then(res => {\r\n      setUserContext();\r\n    })\r\n    .catch(err => {\r\n      setError(err.response.data.message);\r\n    })\r\n  };\r\n\r\n  return {\r\n    login,\r\n    logout,\r\n    registerUser,\r\n    error\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}