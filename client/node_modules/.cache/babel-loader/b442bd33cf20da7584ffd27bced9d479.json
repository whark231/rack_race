{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mufas\\\\OneDrive\\\\Documents\\\\GitHub\\\\project-rack-race\\\\client\\\\src\\\\Pages\\\\Workoutplan\\\\ValidatedForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport MuiAlert from '@mui/material/Alert';\nimport { Snackbar, TextField, Button, Checkbox, Stack } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Alert = /*#__PURE__*/React.forwardRef(_c = (props, ref) => {\n  return /*#__PURE__*/_jsxDEV(MuiAlert, {\n    elevation: 6,\n    ref: ref,\n    variant: \"filled\",\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 10\n  }, this);\n});\n_c2 = Alert;\nexport default function ValidatedForm(props) {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const [target_days, setTarget_Days] = useState(0);\n  const [curr_days_met, setCurr_Days_Met] = useState(0);\n  const [weekly_plan, setWeekly_Plan] = useState('');\n  const [monthlypledge, setMonthlypledge] = useState(id ? id : '');\n  const [err, setErr] = useState(null);\n  const [openErr, setOpenErr] = useState(false);\n  useEffect(() => {\n    if (props.model) {\n      setTarget_Days(props.model.target_days);\n      setCurr_Days_Met(props.model.curr_days_met);\n      setWeekly_Plan(props.model.weekly_plan);\n      setMonthlypledge(props.model.monthlypledge);\n    }\n  }, [props.model]);\n\n  const validate = () => {\n    if (target_days !== '' && curr_days_met !== '' && weekly_plan !== '' && monthlypledge !== '') {\n      props.submit(target_days, curr_days_met, weekly_plan, monthlypledge);\n    } else {\n      if (target_days === '') {\n        setErr('target_days cannot be left blank');\n      } else if (curr_days_met === '') {\n        setErr('curr_days_met cannot be left blank');\n      } else if (weekly_plan === '') {\n        setErr('weekly_plan cannot be left blank');\n      } else if (monthlypledge === '') {\n        setErr('monthlypledge cannot be left blank');\n      }\n\n      setOpenErr(true);\n    }\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpenErr(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Stack, {\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        label: \"target_days\",\n        size: \"small\",\n        type: \"Number\",\n        value: target_days,\n        onChange: e => setTarget_Days(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"curr_days_met\",\n        size: \"small\",\n        type: \"Number\",\n        value: curr_days_met,\n        onChange: e => setCurr_Days_Met(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"weekly_plan\",\n        size: \"small\",\n        type: \"String\",\n        value: weekly_plan,\n        onChange: e => setWeekly_Plan(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"monthlypledge\",\n        size: \"small\",\n        type: \"String\",\n        value: monthlypledge,\n        onChange: e => setMonthlypledge(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: validate,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: openErr,\n      autoHideDuration: 6000,\n      onClose: handleClose,\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: handleClose,\n        severity: \"error\",\n        sx: {\n          width: '100%'\n        },\n        children: err\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ValidatedForm, \"yxY+ndR114RucZYrXtHmed9hQQs=\", false, function () {\n  return [useParams];\n});\n\n_c3 = ValidatedForm;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Alert$React.forwardRef\");\n$RefreshReg$(_c2, \"Alert\");\n$RefreshReg$(_c3, \"ValidatedForm\");","map":{"version":3,"sources":["C:/Users/mufas/OneDrive/Documents/GitHub/project-rack-race/client/src/Pages/Workoutplan/ValidatedForm.js"],"names":["React","useState","useEffect","useParams","MuiAlert","Snackbar","TextField","Button","Checkbox","Stack","Alert","forwardRef","props","ref","ValidatedForm","id","target_days","setTarget_Days","curr_days_met","setCurr_Days_Met","weekly_plan","setWeekly_Plan","monthlypledge","setMonthlypledge","err","setErr","openErr","setOpenErr","model","validate","submit","handleClose","event","reason","e","target","value","width"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { useParams } from 'react-router-dom';\r\nimport MuiAlert from '@mui/material/Alert';\r\nimport {\r\n  Snackbar,\r\n  TextField,\r\n  Button,\r\n  Checkbox,\r\n  Stack\r\n} from '@mui/material'\r\n\r\nconst Alert = React.forwardRef((props, ref) => {\r\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\n\r\nexport default function ValidatedForm(props) {\r\n\tconst { id } = useParams();\t\r\n\tconst [target_days, setTarget_Days] = useState(0);\r\n\tconst [curr_days_met, setCurr_Days_Met] = useState(0);\r\n\tconst [weekly_plan, setWeekly_Plan] = useState('');\r\n\tconst [monthlypledge, setMonthlypledge] = useState(id ? id : '');\r\n  const [err, setErr] = useState(null)\r\n  const [openErr, setOpenErr] = useState(false)\r\n\r\n  useEffect(() => {\r\n\t\tif (props.model) {\r\n\t\t\tsetTarget_Days(props.model.target_days);\r\n\t\t\tsetCurr_Days_Met(props.model.curr_days_met);\r\n\t\t\tsetWeekly_Plan(props.model.weekly_plan);\r\n\t\t\tsetMonthlypledge(props.model.monthlypledge);\r\n\t\t}\r\n\t}, [props.model]);\r\n\r\n  const validate = () => {\r\n\t\tif (target_days !== '' && curr_days_met !== '' && weekly_plan !== '' && monthlypledge !== '') {\r\n\t\t\tprops.submit(target_days, curr_days_met, weekly_plan, monthlypledge)\r\n\t\t} else {\r\n\t\t\tif (target_days === '') {\r\n\t\t\t\tsetErr('target_days cannot be left blank')\r\n\t\t\t}\r\n\t\t\telse if (curr_days_met === '') {\r\n\t\t\t\tsetErr('curr_days_met cannot be left blank')\r\n\t\t\t}\r\n\t\t\telse if (weekly_plan === '') {\r\n\t\t\t\tsetErr('weekly_plan cannot be left blank')\r\n\t\t\t}\r\n\t\t\telse if (monthlypledge === '') {\r\n\t\t\t\tsetErr('monthlypledge cannot be left blank')\r\n\t\t\t}\r\n      setOpenErr(true)\r\n    }\r\n  }\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setOpenErr(false);\r\n  };\r\n\r\n  return (\r\n    <div className='container'>\r\n      <Stack spacing={3}>\r\n\t\t\t\t<TextField\r\n\t\t\t\t\tlabel='target_days' size='small' type='Number'\r\n\t\t\t\t\tvalue={target_days}\r\n\t\t\t\t\tonChange={(e) => setTarget_Days(e.target.value)}\r\n\t\t\t\t/>\r\n\t\t\t\t<TextField\r\n\t\t\t\t\tlabel='curr_days_met' size='small' type='Number'\r\n\t\t\t\t\tvalue={curr_days_met}\r\n\t\t\t\t\tonChange={(e) => setCurr_Days_Met(e.target.value)}\r\n\t\t\t\t/>\r\n\t\t\t\t<TextField\r\n\t\t\t\t\tlabel='weekly_plan' size='small' type='String'\r\n\t\t\t\t\tvalue={weekly_plan}\r\n\t\t\t\t\tonChange={(e) => setWeekly_Plan(e.target.value)}\r\n\t\t\t\t/>\r\n\t\t\t\t<TextField\r\n\t\t\t\t\tlabel='monthlypledge' size='small' type='String'\r\n\t\t\t\t\tvalue={monthlypledge}\r\n\t\t\t\t\tonChange={(e) => setMonthlypledge(e.target.value)}\r\n\t\t\t\t/>\r\n        <Button variant=\"contained\" onClick={validate}>Submit</Button>\r\n      </Stack>\r\n\r\n      <Snackbar open={openErr} autoHideDuration={6000} onClose={handleClose}>\r\n        <Alert onClose={handleClose} severity=\"error\" sx={{ width: '100%' }}>\r\n          {err}\r\n        </Alert>\r\n      </Snackbar>\r\n    </div>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}