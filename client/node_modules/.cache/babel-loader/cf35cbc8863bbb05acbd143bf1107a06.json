{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mufas\\\\OneDrive\\\\Documents\\\\GitHub\\\\project-rack-race\\\\client\\\\src\\\\Auth\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext, useRef } from 'react';\nimport { Button, TextField, Stack } from '@mui/material';\nimport { useNavigate } from 'react-router-dom';\nimport useAuth from '../hooks/useAuth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Login() {\n  _s();\n\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [needsReset, setNeedsReset] = useState(false);\n  const answer = useRef(\"\");\n  const navigate = useNavigate();\n  const {\n    login,\n    error\n  } = useAuth(); //NOT FINISHED WITH RESET PASWORD \n\n  function verify(username, answer) {\n    setNeedsReset(false);\n    navigate(\"/users\");\n    return true;\n  }\n\n  if (needsReset) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Stack, {\n        spacing: 3,\n        children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            color: \"red\"\n          },\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"username\",\n          onChange: e => setUsername(e.target.value),\n          size: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Enter maiden name of mother\",\n          onChange: e => answer.current = e.target.value,\n          type: \"password\",\n          size: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"New password\",\n          onChange: e => setPassword(e.target.value),\n          type: \"password\",\n          size: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: () => verify(username, answer.current),\n          children: \"Verify\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"col\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Stack, {\n      spacing: 3,\n      children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: \"red\"\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"username\",\n        onChange: e => setUsername(e.target.value),\n        size: \"small\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"password\",\n        onChange: e => setPassword(e.target.value),\n        type: \"password\",\n        size: \"small\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: () => login(username, password),\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: () => setNeedsReset(true),\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Login, \"CYUwMLzCOe1Yms7cR27cNWog694=\", false, function () {\n  return [useNavigate, useAuth];\n});\n\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/mufas/OneDrive/Documents/GitHub/project-rack-race/client/src/Auth/Login.js"],"names":["React","useState","useContext","useRef","Button","TextField","Stack","useNavigate","useAuth","Login","username","setUsername","password","setPassword","needsReset","setNeedsReset","answer","navigate","login","error","verify","color","e","target","value","current"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useRef } from 'react'\r\nimport { Button, TextField, Stack } from '@mui/material';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport useAuth from '../hooks/useAuth'\r\n\r\nexport default function Login() {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [needsReset,setNeedsReset] = useState(false);\r\n  const answer = useRef(\"\");\r\n  const navigate = useNavigate();\r\n  \r\n\r\n  const { login, error } = useAuth();\r\n\r\n\r\n  //NOT FINISHED WITH RESET PASWORD \r\n\r\n  function verify(username,answer){\r\n    setNeedsReset(false);\r\n    navigate(\"/users\");\r\n    return true;\r\n  }\r\n\r\n\r\n\r\n  if(needsReset){\r\n\r\n    return (\r\n      <div className='col'>\r\n        <h1>Reset Password</h1>\r\n        <Stack spacing={3}>\r\n          {error &&\r\n            <div style={{color: \"red\"}}>{error}</div>\r\n          }\r\n          <TextField\r\n              label=\"username\"\r\n              onChange={(e)=>setUsername(e.target.value)}\r\n              size=\"small\"\r\n            />\r\n          <TextField\r\n            label=\"Enter maiden name of mother\"\r\n            onChange={(e)=> answer.current = e.target.value}\r\n            type={\"password\"}\r\n            size=\"small\"\r\n          />\r\n          <TextField\r\n          label=\"New password\"\r\n          onChange={(e)=>setPassword(e.target.value)}\r\n          type={\"password\"}\r\n          size=\"small\"\r\n        />\r\n          {/* Submit */}\r\n          <Button \r\n            variant=\"contained\" \r\n            onClick={() => verify(username, answer.current)}\r\n          >Verify</Button>\r\n        </Stack>\r\n      </div>\r\n    )\r\n\r\n  }\r\n\r\n  return (\r\n    <div className='col'>\r\n      <h1>Login</h1>\r\n      <Stack spacing={3}>\r\n        {error &&\r\n          <div style={{color: \"red\"}}>{error}</div>\r\n        }\r\n        <TextField\r\n            label=\"username\"\r\n            onChange={(e)=>setUsername(e.target.value)}\r\n            size=\"small\"\r\n          />\r\n        <TextField\r\n          label=\"password\"\r\n          onChange={(e)=>setPassword(e.target.value)}\r\n          type={\"password\"}\r\n          size=\"small\"\r\n        />\r\n        {/* Submit */}\r\n        <Button \r\n          variant=\"contained\" \r\n          onClick={() => login(username, password)}\r\n        >Login</Button>\r\n        <Button \r\n          variant=\"contained\" \r\n          onClick={() => setNeedsReset(true)}\r\n        >Reset Password</Button>\r\n\r\n      </Stack>\r\n    </div>\r\n  )\r\n\r\n\r\n\r\n\r\n\r\n}"]},"metadata":{},"sourceType":"module"}