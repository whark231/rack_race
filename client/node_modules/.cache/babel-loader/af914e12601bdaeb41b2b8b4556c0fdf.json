{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mufas\\\\OneDrive\\\\Documents\\\\GitHub\\\\project-rack-race\\\\client\\\\src\\\\Auth\\\\ResetPassword.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext, useRef } from 'react';\nimport { Button, TextField, Stack } from '@mui/material';\nimport { Link, useParams, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport useAuth from '../hooks/useAuth';\nimport configData from '../config.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ResetPassword() {\n  _s();\n\n  const [newPassword, setNewPassword] = useState(\"\");\n  const {\n    token\n  } = useParams();\n  const [error, setError] = useState(null);\n  const [response, setResponse] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const navigate = useNavigate();\n\n  const handleResetPassword = () => {\n    setError(null);\n    setLoading(true);\n    axios.put(`${configData.SERVER_URL}/resetpassword`, {\n      resetLink: token,\n      newPassword: newPassword\n    }).then(res => {\n      setLoading(false);\n      setResponse(res.data.message);\n    }).catch(err => {\n      setLoading(false);\n      setError(err.response.data.message);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"col\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Reset Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Stack, {\n      spacing: 3,\n      children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: \"red\"\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this), response && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: \"blue\"\n        },\n        children: response\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"new password\",\n        value: newPassword,\n        type: \"password\",\n        onChange: e => setNewPassword(e.target.value),\n        size: \"small\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: handleResetPassword,\n        children: loading ? \"Loading...\" : \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ResetPassword, \"A0Nph0RexuvWXDnHhhOdfR61tqQ=\", false, function () {\n  return [useParams, useNavigate];\n});\n\n_c = ResetPassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"sources":["C:/Users/mufas/OneDrive/Documents/GitHub/project-rack-race/client/src/Auth/ResetPassword.js"],"names":["React","useState","useContext","useRef","Button","TextField","Stack","Link","useParams","useNavigate","axios","useAuth","configData","ResetPassword","newPassword","setNewPassword","token","error","setError","response","setResponse","loading","setLoading","navigate","handleResetPassword","put","SERVER_URL","resetLink","then","res","data","message","catch","err","color","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,MAAtC,QAAoD,OAApD;AACA,SAASC,MAAT,EAAiBC,SAAjB,EAA4BC,KAA5B,QAAyC,eAAzC;AACA,SAASC,IAAT,EAAeC,SAAf,EAA0BC,WAA1B,QAA6C,kBAA7C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,OAAOC,UAAP,MAAuB,gBAAvB;;AAEA,eAAe,SAASC,aAAT,GAAyB;AAAA;;AACtC,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCd,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM;AAAEe,IAAAA;AAAF,MAAYR,SAAS,EAA3B;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBjB,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACkB,QAAD,EAAWC,WAAX,IAA0BnB,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAM,CAACoB,OAAD,EAAUC,UAAV,IAAwBrB,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAMsB,QAAQ,GAAGd,WAAW,EAA5B;;AAEA,QAAMe,mBAAmB,GAAG,MAAM;AAChCN,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACAI,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAZ,IAAAA,KAAK,CAACe,GAAN,CAAW,GAAEb,UAAU,CAACc,UAAW,gBAAnC,EAAoD;AAClDC,MAAAA,SAAS,EAAEX,KADuC;AAElDF,MAAAA,WAAW,EAAEA;AAFqC,KAApD,EAICc,IAJD,CAIOC,GAAD,IAAS;AACbP,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAF,MAAAA,WAAW,CAACS,GAAG,CAACC,IAAJ,CAASC,OAAV,CAAX;AACD,KAPD,EAQCC,KARD,CAQQC,GAAD,IAAS;AACdX,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAJ,MAAAA,QAAQ,CAACe,GAAG,CAACd,QAAJ,CAAaW,IAAb,CAAkBC,OAAnB,CAAR;AACD,KAXD;AAYD,GAfD;;AAiBA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,KAAD;AAAO,MAAA,OAAO,EAAE,CAAhB;AAAA,iBACGd,KAAK,iBACJ;AAAK,QAAA,KAAK,EAAE;AAACiB,UAAAA,KAAK,EAAE;AAAR,SAAZ;AAAA,kBAA6BjB;AAA7B;AAAA;AAAA;AAAA;AAAA,cAFJ,EAIGE,QAAQ,iBACP;AAAK,QAAA,KAAK,EAAE;AAACe,UAAAA,KAAK,EAAE;AAAR,SAAZ;AAAA,kBAA8Bf;AAA9B;AAAA;AAAA;AAAA;AAAA,cALJ,eAOE,QAAC,SAAD;AACE,QAAA,KAAK,EAAC,cADR;AAEE,QAAA,KAAK,EAAEL,WAFT;AAGE,QAAA,IAAI,EAAC,UAHP;AAIE,QAAA,QAAQ,EAAGqB,CAAD,IAAKpB,cAAc,CAACoB,CAAC,CAACC,MAAF,CAASC,KAAV,CAJ/B;AAKE,QAAA,IAAI,EAAC;AALP;AAAA;AAAA;AAAA;AAAA,cAPF,eAgBE,QAAC,MAAD;AACE,QAAA,OAAO,EAAC,WADV;AAEE,QAAA,OAAO,EAAEb,mBAFX;AAAA,kBAGEH,OAAO,GAAG,YAAH,GAAkB;AAH3B;AAAA;AAAA;AAAA;AAAA,cAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD;;GAnDuBR,a;UAEJL,S,EAIDC,W;;;KANKI,a","sourcesContent":["import React, { useState, useContext, useRef } from 'react'\r\nimport { Button, TextField, Stack } from '@mui/material';\r\nimport { Link, useParams, useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport useAuth from '../hooks/useAuth'\r\nimport configData from '../config.json'\r\n\r\nexport default function ResetPassword() {\r\n  const [newPassword, setNewPassword] = useState(\"\");\r\n  const { token } = useParams();\r\n  const [error, setError] = useState(null);\r\n  const [response, setResponse] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  const handleResetPassword = () => {\r\n    setError(null);\r\n    setLoading(true);\r\n    axios.put(`${configData.SERVER_URL}/resetpassword`, {\r\n      resetLink: token,\r\n      newPassword: newPassword\r\n    })\r\n    .then((res) => {\r\n      setLoading(false);\r\n      setResponse(res.data.message);\r\n    })\r\n    .catch((err) => {\r\n      setLoading(false);\r\n      setError(err.response.data.message);\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div className='col'>\r\n      <h1>Reset Password</h1>\r\n      <Stack spacing={3}>\r\n        {error &&\r\n          <div style={{color: \"red\"}}>{error}</div>\r\n        }\r\n        {response &&\r\n          <div style={{color: \"blue\"}}>{response}</div>\r\n        }\r\n        <TextField\r\n          label=\"new password\"\r\n          value={newPassword}\r\n          type=\"password\"\r\n          onChange={(e)=>setNewPassword(e.target.value)}\r\n          size=\"small\"\r\n        />\r\n\r\n        {/* Submit */}\r\n        <Button \r\n          variant=\"contained\" \r\n          onClick={handleResetPassword}\r\n        >{loading ? \"Loading...\" : \"Reset Password\"}</Button>\r\n      </Stack>\r\n    </div>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}