{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport authHeader from '../services/auth-header';\nexport default function useApi(url) {\n  _s();\n\n  const [loading, setLoading] = useState(false);\n  const [result, setResult] = useState(false);\n  const [error, setError] = useState();\n  const [refreshIndex, setRefreshIndex] = useState(0);\n\n  const refresh = () => {\n    setRefreshIndex(refreshIndex + 1);\n  };\n\n  useEffect(() => {\n    let cancelled = false;\n    setLoading(true);\n    axios.get(url, {\n      headers: authHeader()\n    }).then(r => {\n      if (!cancelled) {\n        setResult(r.data);\n        setLoading(false);\n      }\n\n      ;\n    }).catch(err => {\n      setError(err.response.data);\n    });\n    return () => cancelled = true;\n  }, [url, refreshIndex]);\n  return {\n    result,\n    loading,\n    error,\n    refresh\n  };\n}\n\n_s(useApi, \"Gt2bfCGPtzjRhwfPa6FOGsZyFLM=\");","map":{"version":3,"sources":["C:/Users/mufas/OneDrive/Documents/GitHub/project-rack-race/client/src/hooks/useApi.js"],"names":["React","useState","useEffect","axios","authHeader","useApi","url","loading","setLoading","result","setResult","error","setError","refreshIndex","setRefreshIndex","refresh","cancelled","get","headers","then","r","data","catch","err","response"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AAEA,eAAe,SAASC,MAAT,CAAgBC,GAAhB,EAAqB;AAAA;;AAClC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACQ,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,EAAlC;AACA,QAAM,CAACY,YAAD,EAAeC,eAAf,IAAkCb,QAAQ,CAAC,CAAD,CAAhD;;AAEA,QAAMc,OAAO,GAAG,MAAM;AACpBD,IAAAA,eAAe,CAACD,YAAY,GAAG,CAAhB,CAAf;AACD,GAFD;;AAIAX,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIc,SAAS,GAAG,KAAhB;AACAR,IAAAA,UAAU,CAAC,IAAD,CAAV;AAEAL,IAAAA,KAAK,CAACc,GAAN,CAAUX,GAAV,EAAe;AAAEY,MAAAA,OAAO,EAAEd,UAAU;AAArB,KAAf,EACGe,IADH,CACQC,CAAC,IAAI;AACT,UAAI,CAACJ,SAAL,EAAgB;AACdN,QAAAA,SAAS,CAACU,CAAC,CAACC,IAAH,CAAT;AACAb,QAAAA,UAAU,CAAC,KAAD,CAAV;AACD;;AAAA;AACF,KANH,EAOGc,KAPH,CAOSC,GAAG,IAAI;AACZX,MAAAA,QAAQ,CAACW,GAAG,CAACC,QAAJ,CAAaH,IAAd,CAAR;AACD,KATH;AAWA,WAAO,MAAML,SAAS,GAAG,IAAzB;AACD,GAhBQ,EAgBN,CAACV,GAAD,EAAMO,YAAN,CAhBM,CAAT;AAkBA,SAAO;AACLJ,IAAAA,MADK;AAELF,IAAAA,OAFK;AAGLI,IAAAA,KAHK;AAILI,IAAAA;AAJK,GAAP;AAMD;;GAlCuBV,M","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from 'axios';\r\nimport authHeader from '../services/auth-header';\r\n\r\nexport default function useApi(url) {\r\n  const [loading, setLoading] = useState(false);\r\n  const [result, setResult] = useState(false);\r\n  const [error, setError] = useState();\r\n  const [refreshIndex, setRefreshIndex] = useState(0);\r\n\r\n  const refresh = () => {\r\n    setRefreshIndex(refreshIndex + 1);\r\n  };\r\n  \r\n  useEffect(() => {\r\n    let cancelled = false;\r\n    setLoading(true);\r\n\r\n    axios.get(url, { headers: authHeader() })\r\n      .then(r => {\r\n        if (!cancelled) {\r\n          setResult(r.data);\r\n          setLoading(false);\r\n        };\r\n      })\r\n      .catch(err => {\r\n        setError(err.response.data);\r\n      });\r\n      \r\n    return () => cancelled = true;\r\n  }, [url, refreshIndex]);\r\n\r\n  return {\r\n    result, \r\n    loading,\r\n    error,\r\n    refresh\r\n  };\r\n}"]},"metadata":{},"sourceType":"module"}