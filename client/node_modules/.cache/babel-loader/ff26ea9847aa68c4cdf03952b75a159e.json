{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mufas\\\\OneDrive\\\\Documents\\\\GitHub\\\\project-rack-race\\\\client\\\\src\\\\Pages\\\\Paymentmethod\\\\ValidatedForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport MuiAlert from '@mui/material/Alert';\nimport { Snackbar, TextField, Button, Checkbox, Stack } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Alert = /*#__PURE__*/React.forwardRef(_c = (props, ref) => {\n  return /*#__PURE__*/_jsxDEV(MuiAlert, {\n    elevation: 6,\n    ref: ref,\n    variant: \"filled\",\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 10\n  }, this);\n});\n_c2 = Alert;\nexport default function ValidatedForm(props) {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const [number, setNumber] = useState(0);\n  const [name, setName] = useState('');\n  const [expiration_date, setExpiration_Date] = useState('');\n  const [CVV, setCvv] = useState(0);\n  const [err, setErr] = useState(null);\n  const [user, setUser] = useState(id ? id : '');\n  const [openErr, setOpenErr] = useState(false);\n  useEffect(() => {\n    if (props.model) {\n      setNumber(props.model.number);\n      setName(props.model.name);\n      setExpiration_Date(props.model.expiration_date);\n      setCvv(props.model.CVV);\n      setUser(props.model.user);\n    }\n  }, [props.model]);\n\n  const validate = () => {\n    if (number !== '' && name !== '' && expiration_date !== '' && CVV !== '' && user !== '') {\n      props.submit(number, name, expiration_date, CVV, user);\n    } else {\n      if (number === '') {\n        setErr('number cannot be left blank');\n      } else if (name === '') {\n        setErr('name cannot be left blank');\n      } else if (expiration_date === '') {\n        setErr('expiration_date cannot be left blank');\n      } else if (CVV === '') {\n        setErr('CVV cannot be left blank');\n      } else if (user === '') {\n        setErr('user cannot be left blank');\n      }\n\n      setOpenErr(true);\n    }\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpenErr(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Stack, {\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        label: \"number\",\n        size: \"small\",\n        type: \"Number\",\n        value: number,\n        onChange: e => setNumber(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"name\",\n        size: \"small\",\n        type: \"String\",\n        value: name,\n        onChange: e => setName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"expiration_date\",\n        size: \"small\",\n        type: \"String\",\n        value: expiration_date,\n        onChange: e => setExpiration_Date(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"CVV\",\n        size: \"small\",\n        type: \"Number\",\n        value: CVV,\n        onChange: e => setCvv(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"user\",\n        size: \"small\",\n        type: \"String\",\n        value: user,\n        onChange: e => setUser(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: validate,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: openErr,\n      autoHideDuration: 6000,\n      onClose: handleClose,\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: handleClose,\n        severity: \"error\",\n        sx: {\n          width: '100%'\n        },\n        children: err\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ValidatedForm, \"5PfTa5Q7OVyTvWHJAjrxWGHknVk=\", false, function () {\n  return [useParams];\n});\n\n_c3 = ValidatedForm;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Alert$React.forwardRef\");\n$RefreshReg$(_c2, \"Alert\");\n$RefreshReg$(_c3, \"ValidatedForm\");","map":{"version":3,"sources":["C:/Users/mufas/OneDrive/Documents/GitHub/project-rack-race/client/src/Pages/Paymentmethod/ValidatedForm.js"],"names":["React","useState","useEffect","useParams","MuiAlert","Snackbar","TextField","Button","Checkbox","Stack","Alert","forwardRef","props","ref","ValidatedForm","id","number","setNumber","name","setName","expiration_date","setExpiration_Date","CVV","setCvv","err","setErr","user","setUser","openErr","setOpenErr","model","validate","submit","handleClose","event","reason","e","target","value","width"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { useParams } from 'react-router-dom';\r\nimport MuiAlert from '@mui/material/Alert';\r\nimport {\r\n  Snackbar,\r\n  TextField,\r\n  Button,\r\n  Checkbox,\r\n  Stack\r\n} from '@mui/material'\r\n\r\nconst Alert = React.forwardRef((props, ref) => {\r\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\n\r\nexport default function ValidatedForm(props) {\r\n  const { id } = useParams();\t\r\n\tconst [number, setNumber] = useState(0);\r\n\tconst [name, setName] = useState('');\r\n\tconst [expiration_date, setExpiration_Date] = useState('');\r\n\tconst [CVV, setCvv] = useState(0);\r\n  const [err, setErr] = useState(null)\r\n  const [user, setUser] = useState(id ? id : '');\r\n  const [openErr, setOpenErr] = useState(false)\r\n\r\n  useEffect(() => {\r\n\t\tif (props.model) {\r\n\t\t\tsetNumber(props.model.number);\r\n\t\t\tsetName(props.model.name);\r\n\t\t\tsetExpiration_Date(props.model.expiration_date);\r\n\t\t\tsetCvv(props.model.CVV);\r\n      setUser(props.model.user);\r\n\t\t}\r\n\t}, [props.model]);\r\n\r\n  const validate = () => {\r\n\t\tif (number !== '' && name !== '' && expiration_date !== '' && CVV !== '' && user !== '') {\r\n\t\t\tprops.submit(number, name, expiration_date, CVV, user)\r\n\t\t} else {\r\n\t\t\tif (number === '') {\r\n\t\t\t\tsetErr('number cannot be left blank')\r\n\t\t\t}\r\n\t\t\telse if (name === '') {\r\n\t\t\t\tsetErr('name cannot be left blank')\r\n\t\t\t}\r\n\t\t\telse if (expiration_date === '') {\r\n\t\t\t\tsetErr('expiration_date cannot be left blank')\r\n\t\t\t}\r\n\t\t\telse if (CVV === '') {\r\n\t\t\t\tsetErr('CVV cannot be left blank')\r\n\t\t\t}\r\n      else if (user === '') {\r\n\t\t\t\tsetErr('user cannot be left blank')\r\n\t\t\t}\r\n      setOpenErr(true)\r\n    }\r\n  }\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setOpenErr(false);\r\n  };\r\n\r\n  return (\r\n    <div className='container'>\r\n      <Stack spacing={3}>\r\n\t\t\t\t<TextField\r\n\t\t\t\t\tlabel='number' size='small' type='Number'\r\n\t\t\t\t\tvalue={number}\r\n\t\t\t\t\tonChange={(e) => setNumber(e.target.value)}\r\n\t\t\t\t/>\r\n\t\t\t\t<TextField\r\n\t\t\t\t\tlabel='name' size='small' type='String'\r\n\t\t\t\t\tvalue={name}\r\n\t\t\t\t\tonChange={(e) => setName(e.target.value)}\r\n\t\t\t\t/>\r\n\t\t\t\t<TextField\r\n\t\t\t\t\tlabel='expiration_date' size='small' type='String'\r\n\t\t\t\t\tvalue={expiration_date}\r\n\t\t\t\t\tonChange={(e) => setExpiration_Date(e.target.value)}\r\n\t\t\t\t/>\r\n\t\t\t\t<TextField\r\n\t\t\t\t\tlabel='CVV' size='small' type='Number'\r\n\t\t\t\t\tvalue={CVV}\r\n\t\t\t\t\tonChange={(e) => setCvv(e.target.value)}\r\n\t\t\t\t/>\r\n        <TextField\r\n\t\t\t\t\tlabel='user' size='small' type='String'\r\n\t\t\t\t\tvalue={user}\r\n\t\t\t\t\tonChange={(e) => setUser(e.target.value)}\r\n\t\t\t\t/>\r\n        <Button variant=\"contained\" onClick={validate}>Submit</Button>\r\n      </Stack>\r\n\r\n      <Snackbar open={openErr} autoHideDuration={6000} onClose={handleClose}>\r\n        <Alert onClose={handleClose} severity=\"error\" sx={{ width: '100%' }}>\r\n          {err}\r\n        </Alert>\r\n      </Snackbar>\r\n    </div>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}