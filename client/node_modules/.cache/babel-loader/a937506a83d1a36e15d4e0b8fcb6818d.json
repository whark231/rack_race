{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mufas\\\\OneDrive\\\\Documents\\\\GitHub\\\\project-rack-race\\\\client\\\\src\\\\Pages\\\\User\\\\ValidatedForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport MuiAlert from '@mui/material/Alert';\nimport { Snackbar, TextField, Button, Checkbox, Stack } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Alert = /*#__PURE__*/React.forwardRef(_c = (props, ref) => {\n  return /*#__PURE__*/_jsxDEV(MuiAlert, {\n    elevation: 6,\n    ref: ref,\n    variant: \"filled\",\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 10\n  }, this);\n});\n_c2 = Alert;\nexport default function ValidatedForm(props) {\n  _s();\n\n  const [name, setName] = useState('');\n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [charity, setCharity] = useState('');\n  const [err, setErr] = useState(null);\n  const [openErr, setOpenErr] = useState(false);\n  useEffect(() => {\n    if (props.model) {\n      setName(props.model.name);\n      setUsername(props.model.username);\n      setEmail(props.model.email);\n      setCharity(props.model.charity);\n    }\n  }, [props.model]);\n\n  const validate = () => {\n    if (name !== '' && username !== '' && email !== '' && password !== '' && charity !== '') {\n      props.submit(name, username, email, password, charity);\n    } else {\n      if (name === '') {\n        setErr('name cannot be left blank');\n      } else if (username === '') {\n        setErr('username cannot be left blank');\n      } else if (email === '') {\n        setErr('email cannot be left blank');\n      } else if (password === '') {\n        setErr('password cannot be left blank');\n      } else if (charity === '') {\n        setErr('charity cannot be left blank');\n      }\n\n      setOpenErr(true);\n    }\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpenErr(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Stack, {\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        label: \"name\",\n        size: \"small\",\n        type: \"String\",\n        value: name,\n        onChange: e => setName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"username\",\n        size: \"small\",\n        type: \"String\",\n        value: username,\n        onChange: e => setUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"email\",\n        size: \"small\",\n        type: \"String\",\n        value: email,\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"password\",\n        size: \"small\",\n        type: \"String\",\n        type: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"charity\",\n        size: \"small\",\n        type: \"String\",\n        value: charity,\n        onChange: e => setCharity(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: validate,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: openErr,\n      autoHideDuration: 6000,\n      onClose: handleClose,\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: handleClose,\n        severity: \"error\",\n        sx: {\n          width: '100%'\n        },\n        children: err\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ValidatedForm, \"7o16uI7Pj3EH9vE62vdFLz2v5/Q=\");\n\n_c3 = ValidatedForm;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Alert$React.forwardRef\");\n$RefreshReg$(_c2, \"Alert\");\n$RefreshReg$(_c3, \"ValidatedForm\");","map":{"version":3,"sources":["C:/Users/mufas/OneDrive/Documents/GitHub/project-rack-race/client/src/Pages/User/ValidatedForm.js"],"names":["React","useState","useEffect","useParams","MuiAlert","Snackbar","TextField","Button","Checkbox","Stack","Alert","forwardRef","props","ref","ValidatedForm","name","setName","username","setUsername","email","setEmail","password","setPassword","charity","setCharity","err","setErr","openErr","setOpenErr","model","validate","submit","handleClose","event","reason","e","target","value","width"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,SACEC,QADF,EAEEC,SAFF,EAGEC,MAHF,EAIEC,QAJF,EAKEC,KALF,QAMO,eANP;;AAQA,MAAMC,KAAK,gBAAGV,KAAK,CAACW,UAAN,MAAiB,CAACC,KAAD,EAAQC,GAAR,KAAgB;AAC7C,sBAAO,QAAC,QAAD;AAAU,IAAA,SAAS,EAAE,CAArB;AAAwB,IAAA,GAAG,EAAEA,GAA7B;AAAkC,IAAA,OAAO,EAAC,QAA1C;AAAA,OAAuDD;AAAvD;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAFa,CAAd;MAAMF,K;AAIN,eAAe,SAASI,aAAT,CAAuBF,KAAvB,EAA8B;AAAA;;AAC5C,QAAM,CAACG,IAAD,EAAOC,OAAP,IAAkBf,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACgB,QAAD,EAAWC,WAAX,IAA0BjB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACkB,KAAD,EAAQC,QAAR,IAAoBnB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACoB,QAAD,EAAWC,WAAX,IAA0BrB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACsB,OAAD,EAAUC,UAAV,IAAwBvB,QAAQ,CAAC,EAAD,CAAtC;AACC,QAAM,CAACwB,GAAD,EAAMC,MAAN,IAAgBzB,QAAQ,CAAC,IAAD,CAA9B;AACA,QAAM,CAAC0B,OAAD,EAAUC,UAAV,IAAwB3B,QAAQ,CAAC,KAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AAChB,QAAIU,KAAK,CAACiB,KAAV,EAAiB;AAChBb,MAAAA,OAAO,CAACJ,KAAK,CAACiB,KAAN,CAAYd,IAAb,CAAP;AACAG,MAAAA,WAAW,CAACN,KAAK,CAACiB,KAAN,CAAYZ,QAAb,CAAX;AACAG,MAAAA,QAAQ,CAACR,KAAK,CAACiB,KAAN,CAAYV,KAAb,CAAR;AACAK,MAAAA,UAAU,CAACZ,KAAK,CAACiB,KAAN,CAAYN,OAAb,CAAV;AACA;AACD,GAPS,EAOP,CAACX,KAAK,CAACiB,KAAP,CAPO,CAAT;;AASA,QAAMC,QAAQ,GAAG,MAAM;AACvB,QAAIf,IAAI,KAAK,EAAT,IAAeE,QAAQ,KAAK,EAA5B,IAAkCE,KAAK,KAAK,EAA5C,IAAkDE,QAAQ,KAAK,EAA/D,IAAqEE,OAAO,KAAK,EAArF,EAAyF;AACxFX,MAAAA,KAAK,CAACmB,MAAN,CAAahB,IAAb,EAAmBE,QAAnB,EAA6BE,KAA7B,EAAoCE,QAApC,EAA8CE,OAA9C;AACA,KAFD,MAEO;AACN,UAAIR,IAAI,KAAK,EAAb,EAAiB;AAChBW,QAAAA,MAAM,CAAC,2BAAD,CAAN;AACA,OAFD,MAGK,IAAIT,QAAQ,KAAK,EAAjB,EAAqB;AACzBS,QAAAA,MAAM,CAAC,+BAAD,CAAN;AACA,OAFI,MAGA,IAAIP,KAAK,KAAK,EAAd,EAAkB;AACtBO,QAAAA,MAAM,CAAC,4BAAD,CAAN;AACA,OAFI,MAGA,IAAIL,QAAQ,KAAK,EAAjB,EAAqB;AACzBK,QAAAA,MAAM,CAAC,+BAAD,CAAN;AACA,OAFI,MAGA,IAAIH,OAAO,KAAK,EAAhB,EAAoB;AACxBG,QAAAA,MAAM,CAAC,8BAAD,CAAN;AACA;;AACEE,MAAAA,UAAU,CAAC,IAAD,CAAV;AACD;AACF,GArBD;;AAuBA,QAAMI,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACrC,QAAIA,MAAM,KAAK,WAAf,EAA4B;AAC1B;AACD;;AACDN,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GALD;;AAOA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACE,QAAC,KAAD;AAAO,MAAA,OAAO,EAAE,CAAhB;AAAA,8BACF,QAAC,SAAD;AACC,QAAA,KAAK,EAAC,MADP;AACc,QAAA,IAAI,EAAC,OADnB;AAC2B,QAAA,IAAI,EAAC,QADhC;AAEC,QAAA,KAAK,EAAEb,IAFR;AAGC,QAAA,QAAQ,EAAGoB,CAAD,IAAOnB,OAAO,CAACmB,CAAC,CAACC,MAAF,CAASC,KAAV;AAHzB;AAAA;AAAA;AAAA;AAAA,cADE,eAMF,QAAC,SAAD;AACC,QAAA,KAAK,EAAC,UADP;AACkB,QAAA,IAAI,EAAC,OADvB;AAC+B,QAAA,IAAI,EAAC,QADpC;AAEC,QAAA,KAAK,EAAEpB,QAFR;AAGC,QAAA,QAAQ,EAAGkB,CAAD,IAAOjB,WAAW,CAACiB,CAAC,CAACC,MAAF,CAASC,KAAV;AAH7B;AAAA;AAAA;AAAA;AAAA,cANE,eAWF,QAAC,SAAD;AACC,QAAA,KAAK,EAAC,OADP;AACe,QAAA,IAAI,EAAC,OADpB;AAC4B,QAAA,IAAI,EAAC,QADjC;AAEC,QAAA,KAAK,EAAElB,KAFR;AAGC,QAAA,QAAQ,EAAGgB,CAAD,IAAOf,QAAQ,CAACe,CAAC,CAACC,MAAF,CAASC,KAAV;AAH1B;AAAA;AAAA;AAAA;AAAA,cAXE,eAgBF,QAAC,SAAD;AACC,QAAA,KAAK,EAAC,UADP;AACkB,QAAA,IAAI,EAAC,OADvB;AAC+B,QAAA,IAAI,EAAC,QADpC;AAEM,QAAA,IAAI,EAAC,UAFX;AAGC,QAAA,KAAK,EAAEhB,QAHR;AAIC,QAAA,QAAQ,EAAGc,CAAD,IAAOb,WAAW,CAACa,CAAC,CAACC,MAAF,CAASC,KAAV;AAJ7B;AAAA;AAAA;AAAA;AAAA,cAhBE,eAsBF,QAAC,SAAD;AACC,QAAA,KAAK,EAAC,SADP;AACiB,QAAA,IAAI,EAAC,OADtB;AAC8B,QAAA,IAAI,EAAC,QADnC;AAEC,QAAA,KAAK,EAAEd,OAFR;AAGC,QAAA,QAAQ,EAAGY,CAAD,IAAOX,UAAU,CAACW,CAAC,CAACC,MAAF,CAASC,KAAV;AAH5B;AAAA;AAAA;AAAA;AAAA,cAtBE,eA2BE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,WAAhB;AAA4B,QAAA,OAAO,EAAEP,QAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA3BF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eA+BE,QAAC,QAAD;AAAU,MAAA,IAAI,EAAEH,OAAhB;AAAyB,MAAA,gBAAgB,EAAE,IAA3C;AAAiD,MAAA,OAAO,EAAEK,WAA1D;AAAA,6BACE,QAAC,KAAD;AAAO,QAAA,OAAO,EAAEA,WAAhB;AAA6B,QAAA,QAAQ,EAAC,OAAtC;AAA8C,QAAA,EAAE,EAAE;AAAEM,UAAAA,KAAK,EAAE;AAAT,SAAlD;AAAA,kBACGb;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YA/BF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuCD;;GAvFuBX,a;;MAAAA,a","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { useParams } from 'react-router-dom';\r\nimport MuiAlert from '@mui/material/Alert';\r\nimport {\r\n  Snackbar,\r\n  TextField,\r\n  Button,\r\n  Checkbox,\r\n  Stack\r\n} from '@mui/material'\r\n\r\nconst Alert = React.forwardRef((props, ref) => {\r\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\n\r\nexport default function ValidatedForm(props) {\r\n\tconst [name, setName] = useState('');\r\n\tconst [username, setUsername] = useState('');\r\n\tconst [email, setEmail] = useState('');\r\n\tconst [password, setPassword] = useState('');\r\n\tconst [charity, setCharity] = useState('');\r\n  const [err, setErr] = useState(null)\r\n  const [openErr, setOpenErr] = useState(false)\r\n\r\n  useEffect(() => {\r\n\t\tif (props.model) {\r\n\t\t\tsetName(props.model.name);\r\n\t\t\tsetUsername(props.model.username);\r\n\t\t\tsetEmail(props.model.email);\r\n\t\t\tsetCharity(props.model.charity);\r\n\t\t}\r\n\t}, [props.model]);\r\n\r\n  const validate = () => {\r\n\t\tif (name !== '' && username !== '' && email !== '' && password !== '' && charity !== '') {\r\n\t\t\tprops.submit(name, username, email, password, charity)\r\n\t\t} else {\r\n\t\t\tif (name === '') {\r\n\t\t\t\tsetErr('name cannot be left blank')\r\n\t\t\t}\r\n\t\t\telse if (username === '') {\r\n\t\t\t\tsetErr('username cannot be left blank')\r\n\t\t\t}\r\n\t\t\telse if (email === '') {\r\n\t\t\t\tsetErr('email cannot be left blank')\r\n\t\t\t}\r\n\t\t\telse if (password === '') {\r\n\t\t\t\tsetErr('password cannot be left blank')\r\n\t\t\t}\r\n\t\t\telse if (charity === '') {\r\n\t\t\t\tsetErr('charity cannot be left blank')\r\n\t\t\t}\r\n      setOpenErr(true)\r\n    }\r\n  }\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setOpenErr(false);\r\n  };\r\n\r\n  return (\r\n    <div className='container'>\r\n      <Stack spacing={3}>\r\n\t\t\t\t<TextField\r\n\t\t\t\t\tlabel='name' size='small' type='String'\r\n\t\t\t\t\tvalue={name}\r\n\t\t\t\t\tonChange={(e) => setName(e.target.value)}\r\n\t\t\t\t/>\r\n\t\t\t\t<TextField\r\n\t\t\t\t\tlabel='username' size='small' type='String'\r\n\t\t\t\t\tvalue={username}\r\n\t\t\t\t\tonChange={(e) => setUsername(e.target.value)}\r\n\t\t\t\t/>\r\n\t\t\t\t<TextField\r\n\t\t\t\t\tlabel='email' size='small' type='String'\r\n\t\t\t\t\tvalue={email}\r\n\t\t\t\t\tonChange={(e) => setEmail(e.target.value)}\r\n\t\t\t\t/>\r\n\t\t\t\t<TextField\r\n\t\t\t\t\tlabel='password' size='small' type='String'\r\n          type=\"password\"\r\n\t\t\t\t\tvalue={password}\r\n\t\t\t\t\tonChange={(e) => setPassword(e.target.value)}\r\n\t\t\t\t/>\r\n\t\t\t\t<TextField\r\n\t\t\t\t\tlabel='charity' size='small' type='String'\r\n\t\t\t\t\tvalue={charity}\r\n\t\t\t\t\tonChange={(e) => setCharity(e.target.value)}\r\n\t\t\t\t/>\r\n        <Button variant=\"contained\" onClick={validate}>Submit</Button>\r\n      </Stack>\r\n\r\n      <Snackbar open={openErr} autoHideDuration={6000} onClose={handleClose}>\r\n        <Alert onClose={handleClose} severity=\"error\" sx={{ width: '100%' }}>\r\n          {err}\r\n        </Alert>\r\n      </Snackbar>\r\n    </div>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}