{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mufas\\\\OneDrive\\\\Documents\\\\GitHub\\\\project-rack-race\\\\client\\\\src\\\\Pages\\\\Monthlypledge\\\\MonthlypledgeEdit.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport ValidatedForm from './ValidatedForm';\nimport axios from 'axios';\nimport authHeader from '../../services/auth-header';\nimport '../../App.css';\nimport configData from '../../config.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MonthlypledgeEdit() {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const [monthlypledge, setMonthlypledge] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n  const navigate = useNavigate();\n  useEffect(() => {\n    axios.get(`${configData.SERVER_URL}/monthlypledges/${id}`, {\n      headers: authHeader()\n    }).then(res => {\n      setMonthlypledge(res.data);\n      setLoading(false);\n    }).catch(err => {\n      console.log(err);\n      setError(err);\n    });\n  }, []);\n\n  const handleSubmit = (payment_amount, active, user) => {\n    axios.put(`${configData.SERVER_URL}/monthlypledges/${id}/edit`, {\n      payment_amount: payment_amount,\n      active: active,\n      user: user\n    }, {\n      headers: authHeader()\n    }).then(res => {\n      navigate(`/monthlypledges/${id}`);\n    }).catch(err => {\n      alert(err);\n    });\n  };\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 10\n    }, this);\n  } else if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 10\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Edit Monthlypledge\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(ValidatedForm, {\n        submit: (payment_amount, active, user) => handleSubmit(payment_amount, active, user),\n        model: monthlypledge\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 4\n    }, this);\n  }\n}\n\n_s(MonthlypledgeEdit, \"9RxoPtXsI+3nDxcFyBQPcBXViB4=\", false, function () {\n  return [useParams, useNavigate];\n});\n\n_c = MonthlypledgeEdit;\n\nvar _c;\n\n$RefreshReg$(_c, \"MonthlypledgeEdit\");","map":{"version":3,"sources":["C:/Users/mufas/OneDrive/Documents/GitHub/project-rack-race/client/src/Pages/Monthlypledge/MonthlypledgeEdit.js"],"names":["React","useState","useEffect","useParams","useNavigate","ValidatedForm","axios","authHeader","configData","MonthlypledgeEdit","id","monthlypledge","setMonthlypledge","loading","setLoading","error","setError","navigate","get","SERVER_URL","headers","then","res","data","catch","err","console","log","handleSubmit","payment_amount","active","user","put","alert","message"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,SAAT,EAAoBC,WAApB,QAAuC,kBAAvC;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AACA,OAAO,eAAP;AACA,OAAOC,UAAP,MAAuB,mBAAvB;;AAEA,eAAe,SAASC,iBAAT,GAA6B;AAAA;;AAC3C,QAAM;AAAEC,IAAAA;AAAF,MAASP,SAAS,EAAxB;AACC,QAAM,CAACQ,aAAD,EAAgBC,gBAAhB,IAAoCX,QAAQ,CAAC,IAAD,CAAlD;AACD,QAAM,CAACY,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACc,KAAD,EAAQC,QAAR,IAAoBf,QAAQ,CAAC,KAAD,CAAlC;AACC,QAAMgB,QAAQ,GAAGb,WAAW,EAA5B;AAEDF,EAAAA,SAAS,CAAC,MAAM;AACfI,IAAAA,KAAK,CAACY,GAAN,CAAW,GAAEV,UAAU,CAACW,UAAW,mBAAkBT,EAAG,EAAxD,EAA2D;AAAEU,MAAAA,OAAO,EAAEb,UAAU;AAArB,KAA3D,EACCc,IADD,CACOC,GAAD,IAAS;AACdV,MAAAA,gBAAgB,CAACU,GAAG,CAACC,IAAL,CAAhB;AACAT,MAAAA,UAAU,CAAC,KAAD,CAAV;AACA,KAJD,EAKCU,KALD,CAKQC,GAAD,IAAS;AACfC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAT,MAAAA,QAAQ,CAACS,GAAD,CAAR;AACA,KARD;AASA,GAVQ,EAUN,EAVM,CAAT;;AAYA,QAAMG,YAAY,GAAG,CAACC,cAAD,EAAiBC,MAAjB,EAAyBC,IAAzB,KAAkC;AACpDzB,IAAAA,KAAK,CAAC0B,GAAN,CAAW,GAAExB,UAAU,CAACW,UAAW,mBAAkBT,EAAG,OAAxD,EAAgE;AAChEmB,MAAAA,cAAc,EAAEA,cADgD;AAEhEC,MAAAA,MAAM,EAAEA,MAFwD;AAGhEC,MAAAA,IAAI,EAAEA;AAH0D,KAAhE,EAIG;AAAEX,MAAAA,OAAO,EAAEb,UAAU;AAArB,KAJH,EAKCc,IALD,CAKMC,GAAG,IAAI;AACXL,MAAAA,QAAQ,CAAE,mBAAkBP,EAAG,EAAvB,CAAR;AACD,KAPD,EAQCc,KARD,CAQOC,GAAG,IAAI;AACZQ,MAAAA,KAAK,CAACR,GAAD,CAAL;AACD,KAVD;AAWF,GAZD;;AAcA,MAAIV,KAAJ,EAAW;AACV,wBAAO;AAAA,4BAAaA,KAAK,CAACmB,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACA,GAFD,MAEO,IAAIrB,OAAJ,EAAa;AACnB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACA,GAFM,MAEA;AACN,wBACC;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,eAEC,QAAC,aAAD;AAAe,QAAA,MAAM,EAAE,CAACgB,cAAD,EAAiBC,MAAjB,EAAyBC,IAAzB,KAAkCH,YAAY,CAACC,cAAD,EAAiBC,MAAjB,EAAyBC,IAAzB,CAArE;AAAqG,QAAA,KAAK,EAAEpB;AAA5G;AAAA;AAAA;AAAA;AAAA,cAFD;AAAA;AAAA;AAAA;AAAA;AAAA,YADD;AAMA;AACD;;GA7CuBF,iB;UACRN,S,EAIGC,W;;;KALKK,iB","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport ValidatedForm from './ValidatedForm';\r\nimport axios from 'axios';\r\nimport authHeader from '../../services/auth-header';\r\nimport '../../App.css';\r\nimport configData from '../../config.json'\r\n\r\nexport default function MonthlypledgeEdit() {\r\n\tconst { id } = useParams();\t\r\n  const [monthlypledge, setMonthlypledge] = useState(null);\r\n\tconst [loading, setLoading] = useState(true);\r\n\tconst [error, setError] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n\tuseEffect(() => {\r\n\t\taxios.get(`${configData.SERVER_URL}/monthlypledges/${id}`, { headers: authHeader() })\r\n\t\t.then((res) => {\r\n\t\t\tsetMonthlypledge(res.data);\r\n\t\t\tsetLoading(false);\r\n\t\t})\r\n\t\t.catch((err) => {\r\n\t\t\tconsole.log(err);\r\n\t\t\tsetError(err);\r\n\t\t});\r\n\t}, []);\r\n\r\n\tconst handleSubmit = (payment_amount, active, user) => {\r\n    axios.put(`${configData.SERVER_URL}/monthlypledges/${id}/edit`, {\r\n\t\t\t\tpayment_amount: payment_amount,\r\n\t\t\t\tactive: active,\r\n\t\t\t\tuser: user,\r\n    }, { headers: authHeader() })\r\n    .then(res => {\r\n      navigate(`/monthlypledges/${id}`)\r\n    })\r\n    .catch(err => {\r\n      alert(err)\r\n    });\r\n\t};\r\n\r\n\tif (error) {\r\n\t\treturn <div>Error: {error.message}</div>;\r\n\t} else if (loading) {\r\n\t\treturn <div>Loading...</div>;\r\n\t} else {\r\n\t\treturn (\r\n\t\t\t<div className='container'>\r\n\t\t\t\t<h1>Edit Monthlypledge</h1>\r\n\t\t\t\t<ValidatedForm submit={(payment_amount, active, user) => handleSubmit(payment_amount, active, user)} model={monthlypledge}/>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n"]},"metadata":{},"sourceType":"module"}